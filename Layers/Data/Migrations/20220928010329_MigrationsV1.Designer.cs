// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20220928010329_MigrationsV1")]
    partial class MigrationsV1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Entities.BillEntity", b =>
                {
                    b.Property<Guid>("GUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("BLTDELIVERYDATE")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("BLTEVALACTIVITY1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("BLTEVALACTIVITY2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("BLTEVALACTIVITY3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("BLTEVALACTIVITYEND")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<string>("BLTPERIOD")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("BLTSTATUS")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("BLTTYPE")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CREATEDON")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CURGUID")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CURNAME")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("CourseGUID")
                        .HasColumnType("char(36)");

                    b.Property<string>("SBJGUID")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SBJNAME")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("STDFULLNAME")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("STDGUID")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("STDREGISTRATION")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("StudentGUID")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubjectGUID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UPDATEDON")
                        .HasColumnType("datetime(6)");

                    b.HasKey("GUID");

                    b.HasIndex("CourseGUID");

                    b.HasIndex("StudentGUID")
                        .IsUnique();

                    b.HasIndex("SubjectGUID");

                    b.ToTable("bulletins");
                });

            modelBuilder.Entity("Domain.Entities.CourseEntity", b =>
                {
                    b.Property<Guid>("GUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CREATEDON")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CURMODALITY")
                        .HasColumnType("int");

                    b.Property<string>("CURNAME")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<int>("CUROFFERABLE")
                        .HasColumnType("int");

                    b.Property<DateTime>("CUROFFERABLESYNCE")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CURSUBTYPE")
                        .HasColumnType("int");

                    b.Property<int>("CURTYPE")
                        .HasColumnType("int");

                    b.Property<int>("CURWORKLOAD")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATEDON")
                        .HasColumnType("datetime(6)");

                    b.HasKey("GUID");

                    b.ToTable("courses");

                    b.HasData(
                        new
                        {
                            GUID = new Guid("f6ed78e4-e6bc-476b-bbf7-699cc0c86456"),
                            CREATEDON = new DateTime(2022, 9, 28, 1, 3, 28, 606, DateTimeKind.Utc).AddTicks(6739),
                            CURMODALITY = 1,
                            CURNAME = "MBA Executivo em Segurança Cibernética",
                            CUROFFERABLE = 0,
                            CUROFFERABLESYNCE = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CURSUBTYPE = 0,
                            CURTYPE = 2,
                            CURWORKLOAD = 400
                        },
                        new
                        {
                            GUID = new Guid("994f7446-4541-4ba0-8021-1a6d369c611d"),
                            CREATEDON = new DateTime(2022, 9, 28, 1, 3, 28, 606, DateTimeKind.Utc).AddTicks(6906),
                            CURMODALITY = 1,
                            CURNAME = "Analista de Comportamento e de Carreiras",
                            CUROFFERABLE = 0,
                            CUROFFERABLESYNCE = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CURSUBTYPE = 0,
                            CURTYPE = 3,
                            CURWORKLOAD = 60
                        },
                        new
                        {
                            GUID = new Guid("0780ac95-4bf4-4d35-b4f3-0152b0d7d32a"),
                            CREATEDON = new DateTime(2022, 9, 28, 1, 3, 28, 606, DateTimeKind.Utc).AddTicks(6915),
                            CURMODALITY = 1,
                            CURNAME = "Analista em Inteligência Emocional",
                            CUROFFERABLE = 0,
                            CUROFFERABLESYNCE = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CURSUBTYPE = 0,
                            CURTYPE = 3,
                            CURWORKLOAD = 60
                        },
                        new
                        {
                            GUID = new Guid("32b573d5-ce0b-48ae-bc2b-8fff78743a62"),
                            CREATEDON = new DateTime(2022, 9, 28, 1, 3, 28, 606, DateTimeKind.Utc).AddTicks(6920),
                            CURMODALITY = 1,
                            CURNAME = "Auditoria Pública",
                            CUROFFERABLE = 0,
                            CUROFFERABLESYNCE = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CURSUBTYPE = 0,
                            CURTYPE = 3,
                            CURWORKLOAD = 20
                        },
                        new
                        {
                            GUID = new Guid("ef069aa1-0ce9-4041-8c9a-3e866ed78f51"),
                            CREATEDON = new DateTime(2022, 9, 28, 1, 3, 28, 606, DateTimeKind.Utc).AddTicks(6926),
                            CURMODALITY = 1,
                            CURNAME = "Educação Bilíngue",
                            CUROFFERABLE = 0,
                            CUROFFERABLESYNCE = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CURSUBTYPE = 0,
                            CURTYPE = 3,
                            CURWORKLOAD = 120
                        });
                });

            modelBuilder.Entity("Domain.Entities.ProfileEntity", b =>
                {
                    b.Property<Guid>("GUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CREATEDON")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PFLALIAS")
                        .IsRequired()
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("PFLASSIGNMENTS")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("PFLTITLE")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UPDATEDON")
                        .HasColumnType("datetime(6)");

                    b.HasKey("GUID");

                    b.HasIndex("PFLALIAS")
                        .IsUnique();

                    b.ToTable("profiles");
                });

            modelBuilder.Entity("Domain.Entities.StudentEntity", b =>
                {
                    b.Property<Guid>("GUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CREATEDON")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("STDBIRTHDATE")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("STDDOCID")
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasMaxLength(32);

                    b.Property<string>("STDDOCTYPE")
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasMaxLength(32);

                    b.Property<string>("STDEMAIL")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("STDFULLNAME")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("STDPHONE")
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasMaxLength(32);

                    b.Property<string>("STDREGISTRATION")
                        .IsRequired()
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasMaxLength(32);

                    b.Property<string>("STDSOCIALNAME")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UPDATEDON")
                        .HasColumnType("datetime(6)");

                    b.HasKey("GUID");

                    b.HasIndex("STDEMAIL")
                        .IsUnique();

                    b.HasIndex("STDREGISTRATION")
                        .IsUnique();

                    b.ToTable("students");
                });

            modelBuilder.Entity("Domain.Entities.SubjectEntity", b =>
                {
                    b.Property<Guid>("GUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CREATEDON")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("CoursesGUID")
                        .HasColumnType("char(36)");

                    b.Property<string>("SBJMODALITY")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SBJNAME")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("SBJOFFERABLE")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("SBJOFFERABLESYNCE")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SBJSUBTYPE")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SBJTYPE")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SBJWORKLOAD")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UPDATEDON")
                        .HasColumnType("datetime(6)");

                    b.HasKey("GUID");

                    b.HasIndex("CoursesGUID");

                    b.ToTable("subjects");
                });

            modelBuilder.Entity("Domain.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("GUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CREATEDON")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ProfileGUID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UPDATEDON")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("USEREMAIL")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("USERNAME")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("GUID");

                    b.HasIndex("ProfileGUID");

                    b.HasIndex("USEREMAIL")
                        .IsUnique();

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            GUID = new Guid("f8dd8462-9fdd-4c1c-a885-ee0493e84887"),
                            CREATEDON = new DateTime(2022, 9, 27, 18, 3, 28, 601, DateTimeKind.Local).AddTicks(6269),
                            ProfileGUID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UPDATEDON = new DateTime(2022, 9, 27, 18, 3, 28, 604, DateTimeKind.Local).AddTicks(7515),
                            USEREMAIL = "ntt.hbatistl@gmail.com",
                            USERNAME = "Administrador"
                        });
                });

            modelBuilder.Entity("Domain.Entities.BillEntity", b =>
                {
                    b.HasOne("Domain.Entities.CourseEntity", "Course")
                        .WithMany()
                        .HasForeignKey("CourseGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.StudentEntity", "Student")
                        .WithOne("Bills")
                        .HasForeignKey("Domain.Entities.BillEntity", "StudentGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.SubjectEntity", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.SubjectEntity", b =>
                {
                    b.HasOne("Domain.Entities.CourseEntity", "Courses")
                        .WithMany("Subjects")
                        .HasForeignKey("CoursesGUID");
                });

            modelBuilder.Entity("Domain.Entities.UserEntity", b =>
                {
                    b.HasOne("Domain.Entities.ProfileEntity", "Profile")
                        .WithMany("Users")
                        .HasForeignKey("ProfileGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
